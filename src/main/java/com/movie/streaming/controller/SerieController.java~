package com.movie.streaming.controller;

import com.movie.streaming.dto.EpisodeDto;
import com.movie.streaming.dto.SaisonDto;
import com.movie.streaming.dto.SerieDto;
import com.movie.streaming.dto.SerieFilter;
import com.movie.streaming.entity.Episode;
import com.movie.streaming.entity.Serie;
import com.movie.streaming.service.SerieService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.graphql.data.method.annotation.Argument;
import org.springframework.graphql.data.method.annotation.MutationMapping;
import org.springframework.graphql.data.method.annotation.QueryMapping;
import org.springframework.stereotype.Controller;

import java.util.List;

@Slf4j
@Controller
@RequiredArgsConstructor
public class SerieController {

    private final SerieService serieService;

    @QueryMapping
    public List<Serie> getAllSeries() {
        return  serieService.findAll();
    }
    @QueryMapping
    public List<Serie> getSeriesByCriteria(@Argument SerieFilter filter)
    {
        return  serieService.getSeriesByCriteria(filter);
    }
    @QueryMapping
    public List<Serie> getSeriesByCategory(@Argument String category) {
        return serieService.findSerieByCategory(category);
    }
    @MutationMapping
    public Serie createSerie(@Argument SerieDto serieInput) {
        return serieService.save(serieInput);
    }
    @MutationMapping
    public Serie updateSerie(@Argument SerieDto serieInput) {
        return serieService.update( serieInput);
    }
    @MutationMapping
    public boolean deleteSerie(@Argument String id,SerieDto serieInput) {
        return serieService.delete(serieInput);
    }
    @MutationMapping
    public Serie addSeason(@Argument String idSerie, SaisonDto nouvelleSaison) {
        return serieService.ajouterSaison(idSerie, nouvelleSaison);
    }
    @MutationMapping
    public Serie ajouterEpisode(@Argument String idSerie, int numeroSaison, EpisodeDto nouvelEpisode) {
        return serieService.ajouterEpisode(idSerie,numeroSaison, nouvelEpisode);
    }


}
